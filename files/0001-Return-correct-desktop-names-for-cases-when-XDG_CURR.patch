From 899bb0e2999818c06dd285f57d84d17c041d3e2d Mon Sep 17 00:00:00 2001
From: Peter O'Connor <peter@solus-project.com>
Date: Sun, 11 Jun 2017 15:18:08 +1000
Subject: [PATCH] Return correct desktop names for cases when
 XDG_CURRENT_DESKTOP is a duo

In newer desktop enviroments that opt to integrate into their respective
project frameworks more fully, i.e. the Budgie Desktop on the GNOME Platform,
a split XDG_CURRENT_DESKTOP environmental value is used for DesktopNames.

This permits the desktop to still have it's own specific XDG autostart
facilities, and specific customisations, as well as to correctly integrate
into the host environment.

Large browsers such as Google Chrome already support this notion, as does
Java, and several core libraries within the GNOME infrastructure. In short
this change will allow Qt applications to integrate correctly on GNOME derived
platforms, and in future, possibly others.

Signed-off-by: Peter O'Connor <peter@solus-project.com>
---
 .../services/genericunix/qgenericunixservices.cpp  | 31 ++++++++++++++++++++--
 1 file changed, 29 insertions(+), 2 deletions(-)

diff --git a/src/platformsupport/services/genericunix/qgenericunixservices.cpp b/src/platformsupport/services/genericunix/qgenericunixservices.cpp
index cdb5d33..67330c9 100644
--- a/src/platformsupport/services/genericunix/qgenericunixservices.cpp
+++ b/src/platformsupport/services/genericunix/qgenericunixservices.cpp
@@ -48,6 +48,7 @@
 #include <QtCore/QSettings>
 #include <QtCore/QStandardPaths>
 #include <QtCore/QUrl>
+#include <QtCore/QList>

 #include <stdlib.h>

@@ -60,8 +61,34 @@ enum { debug = 0 };
 static inline QByteArray detectDesktopEnvironment()
 {
     const QByteArray xdgCurrentDesktop = qgetenv("XDG_CURRENT_DESKTOP");
-    if (!xdgCurrentDesktop.isEmpty())
-        return xdgCurrentDesktop.toUpper(); // KDE, GNOME, UNITY, LXDE, MATE, XFCE...
+    QByteArray xdgCurrentDesktopUp;
+
+    if (!xdgCurrentDesktop.isEmpty()) {
+        xdgCurrentDesktopUp = xdgCurrentDesktop.toUpper();
+
+        // Handle a split XDG_CURRENT_DESKTOP, i.e. BUDGIE:GNOME
+        // This is for derived integrated desktops
+        if (xdgCurrentDesktopUp.contains(':')) {
+            QList<QByteArray> desktops = xdgCurrentDesktopUp.split(':');
+
+            for (int i = 0; i < desktops.size(); i++) {
+                if (desktops[i] == "GNOME") {
+                    return QByteArrayLiteral("GNOME");
+                } else if (desktops[i] == "KDE") {
+                    return QByteArrayLiteral("KDE");
+                } else if (desktops[i] == "XFCE") {
+                    return QByteArrayLiteral("XFCE");
+                } else if (desktops[i] == "UNITY") {
+                    return QByteArrayLiteral("UNITY");
+                } else if (desktops[i] == "LXDE") {
+                    return QByteArrayLiteral("LXDE");
+                } else if (desktops[i] == "MATE") {
+                    return QByteArrayLiteral("MATE");
+                }
+            }
+        }
+        return xdgCurrentDesktopUp; // KDE, GNOME, UNITY, LXDE, MATE, XFCE...
+    }

     // Classic fallbacks
     if (!qEnvironmentVariableIsEmpty("KDE_FULL_SESSION"))
--
2.13.1
